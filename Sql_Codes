#CODEBASICS_SQL_PROJECT_CHALLENGE

#TASK 1
select distinct market
from dim_customer
where customer="Atliq Exclusive" and region="APAC"

#TASK 2
With X as 
     (select count(distinct product_code) as unique_products_2020
     from fact_sales_monthly where fiscal_year=2020) ,
     
	Y as
    (select count(distinct product_code) as unique_products_2021
    from fact_sales_monthly where fiscal_year=2021)
    
select
X.unique_products_2020,
Y.unique_products_2021,
round(((Y.unique_products_2021 - X.unique_products_2020)/X.unique_products_2020)*100,2)
as percentage_chng from X , Y;
   
   
#TASK 3
select segment,
       count(distinct product_code) as product_count
from dim_product
group by segment
order by product_count desc;


#TASK 4
with X as (SELECT count(distinct s.product_code) as product_count_2020,p.segment
from fact_sales_monthly s 
join dim_product p 
on s.product_code=p.product_code
where s.fiscal_year =2020 
group by p.segment) ,

Y as (SELECT count(distinct s.product_code) as product_count_2021,p.segment
from fact_sales_monthly s 
join dim_product p 
on s.product_code=p.product_code
where s.fiscal_year =2021 
group by p.segment) 

select x.segment,product_count_2020,product_count_2021,
       abs(x.product_count_2020 - y.product_count_2021) as difference
from x
join y 
on x.segment=y.segment
order by difference desc;

#TASK 5
select m.product_code , p.product , m.manufacturing_cost
from fact_manufacturing_cost m
join dim_product p
on m.product_code=p.product_code
where m.manufacturing_cost = (select max(manufacturing_cost)
from fact_manufacturing_cost)
 or m.manufacturing_cost =(select min(manufacturing_cost)
from fact_manufacturing_cost)
order by manufacturing_cost desc;


#TASK 6
select c.customer_code , c.customer ,
 round(avg(d.pre_invoice_discount_pct)*100,2) as avg_dis_pct
from fact_pre_invoice_deductions d 
join dim_customer c
on d.customer_code=c.customer_code
where fiscal_year=2021 and c.market="india"
group by d.customer_code , c.customer
order by avg_dis_pct desc
limit 5;


#TASK 7
select monthname(s.date) as month , s.fiscal_year,
round(sum(g.gross_price*sold_quantity),2)as gross_sales_amt  
from fact_sales_monthly s
join dim_customer c using (customer_code)
join fact_gross_price g using (product_code)
where customer="atliq exclusive"
group by monthname(s.date) , s.fiscal_year
order by fiscal_year;


#TASK 8
SELECT 
CASE
    WHEN month(date) in (9,10,11) then 'Q1'
    WHEN month(date) in (12,1,2) then 'Q2'
    WHEN month(date) in (3,4,5) then 'Q3'
    ELSE 'Q4'
END AS Quarters,
sum(sold_quantity) as total_sold_quantity
from fact_sales_monthly
where fiscal_year=2020
group by Quarters
order by total_sold_quantity desc;


#TASK 9
with X as (select c.channel , 
round(sum(g.gross_price*sold_quantity)/100000,2) as gross_sales_mln
from fact_sales_monthly s
join dim_customer c using(customer_code)
join fact_gross_price g using (product_code)
where s.fiscal_year=2021
group by c.channel)

select channel , gross_sales_mln,
round((gross_sales_mln/(select sum(gross_sales_mln) from x))*100,2) as pct 
from x
order by gross_sales_mln desc;


#TASK 10
WITH X AS
(SELECT P.division, S.product_code, P.product, SUM(S.sold_quantity) AS Total_sold_quantity,
RANK() OVER (PARTITION BY P.division ORDER BY SUM(S.sold_quantity) DESC) AS 'Rank_Order'
FROM dim_product P JOIN fact_sales_monthly S
ON P.product_code = S.product_code
WHERE S.fiscal_year = 2021
GROUP BY P.division, S.product_code, P.product)
SELECT * FROM X
WHERE Rank_Order IN (1,2,3) ORDER BY division, Rank_Order;
